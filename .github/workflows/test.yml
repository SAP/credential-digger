name: test

on: push
  # push:
  #   branches:
  #   - master
  # pull_request:
  #   types: [opened, synchronize, repoened, edited]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: credential_digger_tests
          DBHOST: localhost 
          DBPORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@master 
        
    - name: Create PostgreSQL database
      run: |
        PGPASSWORD=${{ secrets.POSTGRES_PASSWORD }} psql -U ${{ secrets.POSTGRES_USER }} -h 127.0.0.1 -p 5432 -d credential_digger_tests -f sql/create_table.sql

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install OS dependencies
      run: |
        sudo apt install -y build-essential python3-dev libhyperscan-dev
      
    - name: Cache python dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        key: ${{ runner.os }}-pip-${{ hashFiles('./requirements.txt') }}-${{ hashFiles('./tests/tests-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install python dependencies
      run: |
        pip install -r ./requirements.txt
        pip install -r ./tests/tests-requirements.txt
    
    - name: Install credentialdigger
      run: |
        python setup.py install --user

    - name: Download and link credentialdigger's models
      env:
        path_model: https://github.com/SAP/credential-digger/releases/download/PM-v1.0.1/path_model-1.0.1.tar.gz
        snippet_model: https://github.com/SAP/credential-digger/releases/download/SM-v1.0.0/snippet_model-1.0.0.tar.gz
      run: |
        python -m credentialdigger download path_model
        python -m credentialdigger download snippet_model

    - name: Run unit tests
      run: |
        pytest tests/unit_tests

    - name: Run integration tests
      run: |
        pytest tests/integration_tests

    - name: Run functional tests
      env: 
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: credential_digger_tests
        DBHOST: localhost 
        DBPORT: 5432
        path_model: https://github.com/SAP/credential-digger/releases/download/PM-v1.0.1/path_model-1.0.1.tar.gz
        snippet_model: https://github.com/SAP/credential-digger/releases/download/SM-v1.0.0/snippet_model-1.0.0.tar.gz
      run: |
        pytest tests/functional_tests